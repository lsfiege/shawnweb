%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Thu Mar  8 21:49:47 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 127x102mm 360 288 0 () ()
%%BoundingBox: 0 0 360 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 127x102mm
%%PageBoundingBox: 0 0 360 288
360 288 cairo_set_page_size
%%EndPageSetup
q 0 0 360 288 rectclip q
1 g
0 0 360 288 rectfill
0 g
0.396701 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 288 cm
127.637 -247.645 m 160.957 -267.234 l S Q
0 0 0.8 rg
1.388454 w
q 1 0 0 1 0 288 cm
157.66 -76.945 m 134.184 -38.984 l S Q
0 0.83 0.1328 rg
0.198351 w
q 1 0 0 1 0 288 cm
160.957 -267.234 m 179.945 -281.145 l S Q
0 g
0.396701 w
q 1 0 0 1 0 288 cm
134.184 -38.984 m 87.582 -15.297 l S Q
0.7 0.7 0 rg
130.613 40.355 m 130.613 44.324 124.664 44.324 124.664 40.355 c 124.664
 36.391 130.613 36.391 130.613 40.355 c f
0 g
q 1 0 0 1 0 288 cm
130.613 -247.645 m 130.613 -243.676 124.664 -243.676 124.664 -247.645 c
 124.664 -251.609 130.613 -251.609 130.613 -247.645 c S Q
1 0 0 rg
152.703 216.012 9.918 -9.918 re f
0 g
q 1 0 0 1 0 288 cm
152.703 -71.988 9.918 -9.918 re S Q
0.078574 0.68 0.0663 rg
165.914 20.766 m 165.914 27.375 155.996 27.375 155.996 20.766 c 155.996
 14.152 165.914 14.152 165.914 20.766 c f
0 g
q 1 0 0 1 0 288 cm
165.914 -267.234 m 165.914 -260.625 155.996 -260.625 155.996 -267.234 c
 155.996 -273.848 165.914 -273.848 165.914 -267.234 c S Q
0.066687 0.127858 0.6784 rg
174.984 11.816 9.918 -9.918 re f
0 g
q 1 0 0 1 0 288 cm
174.984 -276.184 9.918 -9.918 re S Q
0.7 0.7 0 rg
241.789 281.145 m 241.789 285.109 235.836 285.109 235.836 281.145 c 235.836
 277.176 241.789 277.176 241.789 281.145 c f
0 g
q 1 0 0 1 0 288 cm
241.789 -6.855 m 241.789 -2.891 235.836 -2.891 235.836 -6.855 c 235.836
 -10.824 241.789 -10.824 241.789 -6.855 c S Q
0.7 0.7 0 rg
313.996 179.684 m 313.996 183.652 308.047 183.652 308.047 179.684 c 308.047
 175.715 313.996 175.715 313.996 179.684 c f
0 g
q 1 0 0 1 0 288 cm
313.996 -108.316 m 313.996 -104.348 308.047 -104.348 308.047 -108.316 c
 308.047 -112.285 313.996 -112.285 313.996 -108.316 c S Q
0.7 0.7 0 rg
137.16 249.016 m 137.16 252.98 131.211 252.98 131.211 249.016 c 131.211
 245.047 137.16 245.047 137.16 249.016 c f
0 g
q 1 0 0 1 0 288 cm
137.16 -38.984 m 137.16 -35.02 131.211 -35.02 131.211 -38.984 c 131.211
 -42.953 137.16 -42.953 137.16 -38.984 c S Q
0.7 0.7 0 rg
90.559 272.703 m 90.559 276.672 84.605 276.672 84.605 272.703 c 84.605 
268.738 90.559 268.738 90.559 272.703 c f
0 g
q 1 0 0 1 0 288 cm
90.559 -15.297 m 90.559 -11.328 84.605 -11.328 84.605 -15.297 c 84.605 
-19.262 90.559 -19.262 90.559 -15.297 c S Q
0.7 0.7 0 rg
51.953 129.867 m 51.953 133.836 46.004 133.836 46.004 129.867 c 46.004 
125.902 51.953 125.902 51.953 129.867 c f
0 g
q 1 0 0 1 0 288 cm
51.953 -158.133 m 51.953 -154.164 46.004 -154.164 46.004 -158.133 c 46.004
 -162.098 51.953 -162.098 51.953 -158.133 c S Q
0.7 0.7 0 rg
195.176 71.672 m 195.176 75.637 189.227 75.637 189.227 71.672 c 189.227
 67.703 195.176 67.703 195.176 71.672 c f
0 g
q 1 0 0 1 0 288 cm
195.176 -216.328 m 195.176 -212.363 189.227 -212.363 189.227 -216.328 c
 189.227 -220.297 195.176 -220.297 195.176 -216.328 c S Q
Q Q
showpage
%%Trailer
%%EOF
